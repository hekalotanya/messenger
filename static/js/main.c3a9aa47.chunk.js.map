{"version":3,"sources":["App.module.scss","components/UsersList/UsersList.module.scss","helpers/helpers.ts","helpers/sign-up.ts","components/SignUp/SignUp.tsx","helpers/getChats.ts","helpers/createChatMessage.ts","helpers/getChatMessages.ts","components/Chats/Chats.tsx","helpers/sign-in.ts","components/SignIn/SignIn.tsx","helpers/getAuthUser.ts","helpers/getUsers.ts","helpers/createChat.ts","components/UsersList/UsersList.tsx","App.tsx","index.tsx","components/SignUp/SignUp.module.scss","components/Chats/Chats.module.scss"],"names":["module","exports","API_URL","signUp","username","password","a","result","fetch","method","headers","body","JSON","stringify","response","ok","json","Error","SignUp","user","setUser","useState","state","setState","error","setError","handleChange","e","target","name","value","prev","handleSubmit","preventDefault","userFromServer","trim","Object","keys","length","localStorage","setItem","token","className","styles","container","form","onSubmit","onChange","input","type","placeholder","button","disabled","link","to","getChats","userId","chats","createChatMessage","authorId","chatId","message","getChatMessages","Chats","loading","setLoading","setChats","currentChatId","setCurrentChatId","setMessage","messages","setMessages","lastMessageRef","useRef","fetchChats","useCallback","data","fetchChatMessages","chatMessages","useEffect","interval","setInterval","clearInterval","current","scrollIntoView","behavior","chatsList","list","map","chat","aria-hidden","cn","listItem","selectedChat","id","onClick","senderId","recipientId","noChatSelected","title","messagesContainer","messagesList","chatMessage","i","arr","ref","messageItem","myMessage","inputContainer","messageInput","sendButton","signIn","SignIn","getAuthUser","getUsers","users","createChat","UsersList","setUsers","errors","setErrors","fetchUsers","u","list__item","createChatButton","src","alt","App","usersToken","getItem","getUser","app","appHeader","header","navigation","userInfo","profileIcon","logOutButton","removeItem","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3a9aa47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"header\":\"App_header__2L3DO\",\"appHeader\":\"App_appHeader__3VqWx\",\"table\":\"App_table__1ESJA\",\"navigation\":\"App_navigation__dUcBC\",\"link\":\"App_link__1t642\",\"logOutButton\":\"App_logOutButton__2lxp9\",\"userInfo\":\"App_userInfo__1K6tZ\",\"profileIcon\":\"App_profileIcon__2us_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UsersList_container__vTwVD\",\"list\":\"UsersList_list__2AeyC\",\"list__item\":\"UsersList_list__item__3a1xr\",\"createChatButton\":\"UsersList_createChatButton__2iGD_\",\"error\":\"UsersList_error__1fMBK\"};","export const API_URL = 'https://hekalot-messenger.herokuapp.com';\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\ninterface SignUp {\n  (username: string, password: string): Promise<UserType>;\n}\n\nexport const signUp: SignUp = async (username, password) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/sign-up`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import {\n  ChangeEvent, Dispatch, FC,\n  FormEvent, SetStateAction, useState,\n} from 'react';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { signUp } from '../../helpers/sign-up';\nimport { UserType } from '../../typedefs/User';\nimport styles from './SignUp.module.scss';\n\ninterface Props {\n  user: null | UserType\n  setUser: Dispatch<SetStateAction<UserType | null>>\n}\n\nexport const SignUp: FC<Props> = ({ user, setUser }) => {\n  const [state, setState] = useState<{\n    username: string;\n    password: string;\n  }>({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n    setError(false);\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const { username, password } = state;\n\n    let userFromServer = null;\n\n    if (username.trim() && password.trim()) {\n      userFromServer = await signUp(username, password);\n\n      if (!Object.keys(userFromServer).length) {\n        setError(true);\n        setState({\n          username: '',\n          password: '',\n        });\n\n        return;\n      }\n\n      setState({\n        username: '',\n        password: '',\n      });\n\n      localStorage.setItem('token', userFromServer.token);\n      setUser(userFromServer);\n    }\n  };\n\n  return (\n    <main className={styles.container}>\n      <h1>Sign up</h1>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmit}\n      >\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          value={state.username}\n        />\n\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={state.password}\n        />\n\n        {error && <p className={styles.error}>Such user already exists</p>}\n\n        <button\n          className={styles.button}\n          type=\"submit\"\n          disabled={!state.password.trim() || !state.username.trim()}\n        >\n          sign up\n        </button>\n      </form>\n\n      <NavLink\n        className={styles.link}\n        to=\"/sign-in\"\n      >\n        Have an account?\n      </NavLink>\n      {user && <Redirect to=\"/users\" />}\n    </main>\n  );\n};\n","import { Chat } from '../typedefs/Chat';\nimport { API_URL } from './helpers';\n\nexport const getChats = async (userId: number): Promise<Chat[]> => {\n  const chats = await fetch(`${API_URL}/chats/${userId}`);\n\n  return chats.json();\n};\n","import { ChatMessage } from '../typedefs/ChatMessage';\nimport { API_URL } from './helpers';\n\ninterface CreateChat {\n  (authorId: number, chatId: number, message: string): Promise<ChatMessage>;\n}\n\nexport const createChatMessage: CreateChat = async (\n  authorId, chatId, message,\n) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/chat/${chatId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        authorId,\n        message,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import { ChatMessage } from '../typedefs/ChatMessage';\nimport { API_URL } from './helpers';\n\nexport const getChatMessages = async (chatId: number): Promise<ChatMessage[]> => {\n  const chats = await fetch(`${API_URL}/chat/${chatId}`);\n\n  return chats.json();\n};\n","import {\n  FC, useState, useEffect, useCallback,\n  useRef,\n} from 'react';\nimport cn from 'classnames';\nimport { getChats } from '../../helpers/getChats';\nimport { Chat } from '../../typedefs/Chat';\nimport { createChatMessage } from '../../helpers/createChatMessage';\nimport { ChatMessage } from '../../typedefs/ChatMessage';\nimport styles from './Chats.module.scss';\nimport { getChatMessages } from '../../helpers/getChatMessages';\n\ninterface Props {\n  userId?: number | null\n}\n\nexport const Chats: FC<Props> = ({ userId }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [currentChatId, setCurrentChatId] = useState(0);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const lastMessageRef = useRef<HTMLLIElement | null>(null);\n\n  const fetchChats = useCallback(async () => {\n    if (!userId) {\n      return;\n    }\n\n    setLoading(true);\n    const data = await getChats(userId);\n\n    setChats(data);\n    setLoading(false);\n  }, [userId]);\n\n  const fetchChatMessages = useCallback(async () => {\n    if (currentChatId) {\n      const chatMessages = await getChatMessages(currentChatId);\n\n      setMessages(chatMessages);\n    }\n  }, [currentChatId]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchChatMessages();\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        behavior: 'smooth',\n      });\n    }\n  }, [lastMessageRef.current]);\n\n  useEffect(() => {\n    fetchChats();\n  }, [fetchChats]);\n\n  if (!userId) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className={styles.container}>\n        <aside className={styles.chatsList}>\n          <ul className={styles.list}>\n            {!loading && chats.map((chat) => (\n              <li\n                aria-hidden\n                className={cn(styles.listItem, {\n                  [styles.selectedChat]: currentChatId === chat.id,\n                })}\n                key={chat.id}\n                onClick={() => {\n                  setCurrentChatId(chat.id);\n                }}\n              >\n                {`Chat #${chat.id} with ${userId === chat.senderId ? chat.recipientId : chat.senderId}`}\n              </li>\n            ))}\n          </ul>\n        </aside>\n        <main className={cn(styles.chat, {\n          [styles.noChatSelected]: currentChatId === 0,\n        })}\n        >\n          {!currentChatId\n            ? <h3>select a chat</h3>\n            : <h3 className={styles.title}>{`Selected chat #${currentChatId}`}</h3>}\n\n          {currentChatId !== 0 && (\n            <div className={styles.messagesContainer}>\n              <ul className={styles.messagesList}>\n                {messages.map((chatMessage, i, arr) => (\n                  <li\n                    ref={(i === arr.length - 1) ? lastMessageRef : null}\n                    key={chatMessage.id}\n                    className={cn(styles.messageItem, {\n                      [styles.myMessage]: chatMessage.authorId === userId,\n                    })}\n                  >\n                    {chatMessage.message}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {currentChatId !== 0 && (\n\n            <form\n              className={styles.inputContainer}\n              onSubmit={async (e) => {\n                e.preventDefault();\n                await createChatMessage(userId, currentChatId, message);\n\n                setMessage('');\n              }}\n            >\n              <input\n                className={styles.messageInput}\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                type=\"text\"\n              />\n\n              <button\n                type=\"submit\"\n                className={styles.sendButton}\n              >\n                send\n              </button>\n            </form>\n\n          )}\n        </main>\n      </div>\n    </>\n  );\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\ninterface SignIn {\n  (username: string, password: string): Promise<UserType>;\n}\n\nexport const signIn: SignIn = async (username, password) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/sign-in`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import {\n  ChangeEvent, Dispatch, FC,\n  FormEvent, SetStateAction, useState,\n} from 'react';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { signIn } from '../../helpers/sign-in';\nimport { UserType } from '../../typedefs/User';\nimport styles from '../SignUp/SignUp.module.scss';\n\ninterface Props {\n  user: null | UserType\n  setUser: Dispatch<SetStateAction<UserType | null>>\n}\n\nexport const SignIn: FC<Props> = ({ user, setUser }) => {\n  const [state, setState] = useState<{\n    username: string;\n    password: string;\n  }>({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n    setError(false);\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const { username, password } = state;\n\n    let userFromServer = null;\n\n    if (username.trim() && password.trim()) {\n      userFromServer = await signIn(username, password);\n\n      if (!Object.keys(userFromServer).length) {\n        setError(true);\n        setState({\n          username: '',\n          password: '',\n        });\n\n        return;\n      }\n\n      setState({\n        username: '',\n        password: '',\n      });\n\n      localStorage.setItem('token', userFromServer.token);\n      setUser(userFromServer);\n    }\n  };\n\n  return (\n    <main className={styles.container}>\n      <h1>Sign in</h1>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmit}\n      >\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          value={state.username}\n        />\n\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={state.password}\n        />\n\n        {error && <p className={styles.error}>There is no such user</p>}\n\n        <button\n          className={styles.button}\n          type=\"submit\"\n          disabled={!state.password.trim() || !state.username.trim()}\n        >\n          sign in\n        </button>\n      </form>\n\n      <NavLink\n        className={styles.link}\n        to=\"/sign-up\"\n      >\n        Create an account\n      </NavLink>\n      {user && <Redirect to=\"/users\" />}\n    </main>\n  );\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\nexport const getAuthUser = async (token: string): Promise<UserType> => {\n  const user = await fetch(`${API_URL}/user/${token}`);\n\n  return user.json();\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\nexport const getUsers = async (userId: number): Promise<Omit<UserType, 'token'>[]> => {\n  const users = await fetch(`${API_URL}/users/${userId}`);\n\n  return users.json();\n};\n","import { Chat } from '../typedefs/Chat';\nimport { API_URL } from './helpers';\n\ninterface CreateChat {\n  (senderId: number, recipientId: number): Promise<Chat>;\n}\n\nexport const createChat: CreateChat = async (senderId, recipientId) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/chats`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        senderId,\n        recipientId,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import {\n  FC, useState, useEffect, useCallback,\n} from 'react';\nimport { getUsers } from '../../helpers/getUsers';\nimport { createChat } from '../../helpers/createChat';\nimport { UserType } from '../../typedefs/User';\nimport styles from './UsersList.module.scss';\n\ninterface Props {\n  user: UserType\n}\n\nexport const UsersList: FC<Props> = ({ user }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [users, setUsers] = useState<Omit<UserType, 'token'>[]>([]);\n  const [errors, setErrors] = useState<Record<string, any>>({});\n\n  const fetchUsers = useCallback(async () => {\n    setLoading(true);\n    const data = await getUsers(user.id);\n\n    setUsers(data);\n    setLoading(false);\n  }, [user]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  return (\n    <main className={styles.container}>\n      <h1>Users to chat with</h1>\n      <ul className={styles.list}>\n        {!loading && users.length > 0 && users.map((u) => (\n          <li\n            className={styles.list__item}\n            key={u.id}\n          >\n            {`${u.username}(${u.id})`}\n            {errors[`${u.id}`] && (\n              <span className={styles.error}>\n                you already have a chat with this user\n              </span>\n            )}\n            <button\n              className={styles.createChatButton}\n              type=\"button\"\n              title=\"create chat\"\n              onClick={async () => {\n                const chat = await createChat(user.id, u.id);\n\n                if (!Object.keys(chat).length) {\n                  setErrors(prev => ({\n                    ...prev,\n                    [u.id]: true,\n                  }));\n                }\n              }}\n            >\n              <img src=\"https://www.svgrepo.com/show/59167/chat.svg\" alt=\"send message\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n} from 'react-router-dom';\nimport styles from './App.module.scss';\nimport { SignUp } from './components/SignUp';\nimport { UserType } from './typedefs/User';\nimport { Chats } from './components/Chats';\nimport { SignIn } from './components/SignIn';\nimport { getAuthUser } from './helpers/getAuthUser';\nimport { UsersList } from './components/UsersList';\n\nexport const App = () => {\n  const [user, setUser] = useState<UserType | null>(null);\n  const usersToken = localStorage.getItem('token');\n\n  const getUser = useCallback(\n    async (token: string) => {\n      const userFromServer = await getAuthUser(token);\n\n      setUser(userFromServer);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (!user && usersToken) {\n      getUser(usersToken);\n    }\n  });\n\n  return (\n    <Router>\n      <div className={styles.app}>\n        <header className={styles.appHeader}>\n          <h1 className={styles.header}>\n            Simple messenger\n          </h1>\n\n          {user && (\n            <nav className={styles.navigation}>\n              <Link\n                className={styles.link}\n                to=\"/users\"\n              >\n                users\n              </Link>\n              <Link\n                className={styles.link}\n                to=\"/chats\"\n              >\n                chats\n              </Link>\n            </nav>\n          )}\n\n          {user && (\n            <div\n              className={styles.userInfo}\n              title=\"currently you are logged in as\"\n            >\n              <img\n                src=\"https://www.svgrepo.com/show/60372/profile-user.svg\"\n                alt=\"profile pic\"\n                className={styles.profileIcon}\n              />\n              <span>\n                {user.username}\n              </span>\n            </div>\n          )}\n\n          {user && (\n            <button\n              className={styles.logOutButton}\n              type=\"button\"\n              onClick={() => {\n                setUser(null);\n                localStorage.removeItem('token');\n              }}\n            >\n              Log out\n            </button>\n          )}\n        </header>\n      </div>\n\n      <Switch>\n        <Route path=\"/sign-up\">\n          <SignUp\n            user={user}\n            setUser={setUser}\n          />\n        </Route>\n        <Route path=\"/sign-in\">\n          <SignIn\n            user={user}\n            setUser={setUser}\n          />\n        </Route>\n        {!user && !usersToken && <Redirect to=\"/sign-in\" />}\n        <Route path=\"/users\">\n          {user && (\n            <UsersList\n              user={user}\n            />\n          )}\n        </Route>\n        <Route path=\"/chats\">\n          <Chats\n            userId={user?.id}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container___8gj8\",\"form\":\"SignUp_form__37NGc\",\"input\":\"SignUp_input__1zju_\",\"button\":\"SignUp_button__f3QJr\",\"error\":\"SignUp_error__2HfVX\",\"link\":\"SignUp_link__1BKSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chats_container__3hli7\",\"title\":\"Chats_title__2H04i\",\"chatsList\":\"Chats_chatsList__1_VFh\",\"list\":\"Chats_list__2x07o\",\"listItem\":\"Chats_listItem__1sCai\",\"selectedChat\":\"Chats_selectedChat__3ta07\",\"chat\":\"Chats_chat__XpwSH\",\"noChatSelected\":\"Chats_noChatSelected__w3sjT\",\"inputContainer\":\"Chats_inputContainer__1YEU1\",\"messageInput\":\"Chats_messageInput__3eMYV\",\"sendButton\":\"Chats_sendButton__gnyhv\",\"messagesContainer\":\"Chats_messagesContainer__qIidb\",\"messagesList\":\"Chats_messagesList__3LpRt\",\"messageItem\":\"Chats_messageItem__1Tg_s\",\"myMessage\":\"Chats_myMessage__nPcxy\"};"],"sourceRoot":""}