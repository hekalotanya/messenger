{"version":3,"sources":["App.module.scss","components/UsersList/UsersList.module.scss","helpers/helpers.ts","helpers/sign-up.ts","components/SignUp/SignUp.tsx","helpers/getChats.ts","components/Chats/Chats.tsx","helpers/sign-in.ts","components/SignIn/SignIn.tsx","helpers/getAuthUser.ts","helpers/getUsers.ts","components/UsersList/UsersList.tsx","App.tsx","index.tsx","components/SignUp/SignUp.module.scss"],"names":["module","exports","API_URL","signUp","username","password","a","result","fetch","method","headers","body","JSON","stringify","response","ok","json","Error","SignUp","user","setUser","useState","state","setState","error","setError","handleChange","e","target","name","value","prev","handleSubmit","preventDefault","userFromServer","trim","Object","keys","length","localStorage","setItem","token","className","styles","container","form","onSubmit","onChange","input","type","placeholder","button","disabled","link","to","getChats","userId","chats","Chats","loading","setLoading","setChats","fetchChats","useCallback","data","useEffect","map","chat","id","signIn","SignIn","getAuthUser","getUsers","users","UsersList","setUsers","fetchUsers","list","u","list__item","createChatButton","onClick","console","log","src","alt","App","usersToken","getItem","getUser","app","appHeader","header","userInfo","title","profileIcon","logOutButton","removeItem","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a138da1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"header\":\"App_header__2L3DO\",\"appHeader\":\"App_appHeader__3VqWx\",\"table\":\"App_table__1ESJA\",\"logOutButton\":\"App_logOutButton__2lxp9\",\"userInfo\":\"App_userInfo__1K6tZ\",\"profileIcon\":\"App_profileIcon__2us_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UsersList_list__2AeyC\",\"list__item\":\"UsersList_list__item__3a1xr\",\"createChatButton\":\"UsersList_createChatButton__2iGD_\"};","export const API_URL = 'https://hekalot-messenger.herokuapp.com';\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\ninterface SignUp {\n  (username: string, password: string): Promise<UserType>;\n}\n\nexport const signUp: SignUp = async (username, password) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/sign-up`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import {\n  ChangeEvent, Dispatch, FC,\n  FormEvent, SetStateAction, useState,\n} from 'react';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { signUp } from '../../helpers/sign-up';\nimport { UserType } from '../../typedefs/User';\nimport styles from './SignUp.module.scss';\n\ninterface Props {\n  user: null | UserType\n  setUser: Dispatch<SetStateAction<UserType | null>>\n}\n\nexport const SignUp: FC<Props> = ({ user, setUser }) => {\n  const [state, setState] = useState<{\n    username: string;\n    password: string;\n  }>({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n    setError(false);\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const { username, password } = state;\n\n    let userFromServer = null;\n\n    if (username.trim() && password.trim()) {\n      userFromServer = await signUp(username, password);\n\n      if (!Object.keys(userFromServer).length) {\n        setError(true);\n        setState({\n          username: '',\n          password: '',\n        });\n\n        return;\n      }\n\n      setState({\n        username: '',\n        password: '',\n      });\n\n      localStorage.setItem('token', userFromServer.token);\n      setUser(userFromServer);\n    }\n  };\n\n  return (\n    <main className={styles.container}>\n      <h1>Sign up</h1>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmit}\n      >\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          value={state.username}\n        />\n\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={state.password}\n        />\n\n        {error && <p className={styles.error}>Such user already exists</p>}\n\n        <button\n          className={styles.button}\n          type=\"submit\"\n          disabled={!state.password.trim() || !state.username.trim()}\n        >\n          sign up\n        </button>\n      </form>\n\n      <NavLink\n        className={styles.link}\n        to=\"/sign-in\"\n      >\n        Have an account?\n      </NavLink>\n      {user && <Redirect to=\"/users\" />}\n    </main>\n  );\n};\n","import { API_URL } from './helpers';\n\nexport const getChats = async (userId: number): Promise<any> => {\n  const chats = await fetch(`${API_URL}/chats`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      userId,\n    }),\n  });\n\n  return chats.json();\n};\n","import {\n  FC, useState, useEffect, useCallback,\n} from 'react';\nimport { getChats } from '../../helpers/getChats';\nimport { Chat } from '../../typedefs/Chat';\n\ninterface Props {\n  userId?: number | null\n}\n\nexport const Chats: FC<Props> = ({ userId }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [chats, setChats] = useState<Chat[]>([]);\n\n  const fetchChats = useCallback(async () => {\n    if (!userId) {\n      return;\n    }\n\n    setLoading(true);\n    const data = await getChats(userId);\n\n    setChats(data);\n    setLoading(false);\n  }, [userId]);\n\n  useEffect(() => {\n    fetchChats();\n  }, [fetchChats]);\n\n  if (!userId) {\n    return null;\n  }\n\n  return (\n    <ul>\n      {!loading && chats.map((chat) => (\n        <li key={chat.id}>\n          {chat.id}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\ninterface SignIn {\n  (username: string, password: string): Promise<UserType>;\n}\n\nexport const signIn: SignIn = async (username, password) => {\n  let result = null;\n\n  try {\n    const response = await fetch(`${API_URL}/sign-in`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n\n    if (response.ok) {\n      result = await response.json();\n    }\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  return result;\n};\n","import {\n  ChangeEvent, Dispatch, FC,\n  FormEvent, SetStateAction, useState,\n} from 'react';\nimport { Redirect, NavLink } from 'react-router-dom';\nimport { signIn } from '../../helpers/sign-in';\nimport { UserType } from '../../typedefs/User';\nimport styles from '../SignUp/SignUp.module.scss';\n\ninterface Props {\n  user: null | UserType\n  setUser: Dispatch<SetStateAction<UserType | null>>\n}\n\nexport const SignIn: FC<Props> = ({ user, setUser }) => {\n  const [state, setState] = useState<{\n    username: string;\n    password: string;\n  }>({\n    username: '',\n    password: '',\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n    setError(false);\n  };\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const { username, password } = state;\n\n    let userFromServer = null;\n\n    if (username.trim() && password.trim()) {\n      userFromServer = await signIn(username, password);\n\n      if (!Object.keys(userFromServer).length) {\n        setError(true);\n        setState({\n          username: '',\n          password: '',\n        });\n\n        return;\n      }\n\n      setState({\n        username: '',\n        password: '',\n      });\n\n      localStorage.setItem('token', userFromServer.token);\n      setUser(userFromServer);\n    }\n  };\n\n  return (\n    <main className={styles.container}>\n      <h1>Sign in</h1>\n      <form\n        className={styles.form}\n        onSubmit={handleSubmit}\n      >\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          value={state.username}\n        />\n\n        <input\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={state.password}\n        />\n\n        {error && <p className={styles.error}>There is no such user</p>}\n\n        <button\n          className={styles.button}\n          type=\"submit\"\n          disabled={!state.password.trim() || !state.username.trim()}\n        >\n          sign in\n        </button>\n      </form>\n\n      <NavLink\n        className={styles.link}\n        to=\"/sign-up\"\n      >\n        Create an account\n      </NavLink>\n      {user && <Redirect to=\"/users\" />}\n    </main>\n  );\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\nexport const getAuthUser = async (token: string): Promise<UserType> => {\n  const user = await fetch(`${API_URL}/user/${token}`);\n\n  return user.json();\n};\n","import { UserType } from '../typedefs/User';\nimport { API_URL } from './helpers';\n\nexport const getUsers = async (userId: number): Promise<Omit<UserType, 'token'>[]> => {\n  const users = await fetch(`${API_URL}/users/${userId}`);\n\n  return users.json();\n};\n","import {\n  FC, useState, useEffect, useCallback,\n} from 'react';\nimport { getUsers } from '../../helpers/getUsers';\nimport { UserType } from '../../typedefs/User';\nimport styles from './UsersList.module.scss';\n\ninterface Props {\n  user: UserType\n}\n\nexport const UsersList: FC<Props> = ({ user }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [users, setUsers] = useState<Omit<UserType, 'token'>[]>([]);\n\n  const fetchUsers = useCallback(async () => {\n    setLoading(true);\n    const data = await getUsers(user.id);\n\n    setUsers(data);\n    setLoading(false);\n  }, [user]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  return (\n    <ul className={styles.list}>\n      {!loading && users.length > 0 && users.map((u) => (\n        <li\n          className={styles.list__item}\n          key={u.id}\n        >\n          {u.username}\n          <button\n            className={styles.createChatButton}\n            type=\"button\"\n            onClick={() => {\n              console.log('create chat');\n            }}\n          >\n            <img src=\"https://www.svgrepo.com/show/59167/chat.svg\" alt=\"send message\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport styles from './App.module.scss';\nimport { SignUp } from './components/SignUp';\nimport { UserType } from './typedefs/User';\nimport { Chats } from './components/Chats';\nimport { SignIn } from './components/SignIn';\nimport { getAuthUser } from './helpers/getAuthUser';\nimport { UsersList } from './components/UsersList';\n\nexport const App = () => {\n  const [user, setUser] = useState<UserType | null>(null);\n  const usersToken = localStorage.getItem('token');\n\n  const getUser = useCallback(\n    async (token: string) => {\n      const userFromServer = await getAuthUser(token);\n\n      setUser(userFromServer);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (!user && usersToken) {\n      getUser(usersToken);\n    }\n  });\n\n  return (\n    <Router>\n      <div className={styles.app}>\n        <header className={styles.appHeader}>\n          <h1 className={styles.header}>\n            Simple messenger\n          </h1>\n\n          {user && (\n            <div\n              className={styles.userInfo}\n              title=\"currently you are logged in as\"\n            >\n              <img\n                src=\"https://www.svgrepo.com/show/60372/profile-user.svg\"\n                alt=\"profile pic\"\n                className={styles.profileIcon}\n              />\n              <span>\n                {user.username}\n              </span>\n            </div>\n          )}\n\n          {user && (\n            <button\n              className={styles.logOutButton}\n              type=\"button\"\n              onClick={() => {\n                setUser(null);\n                localStorage.removeItem('token');\n              }}\n            >\n              Log out\n            </button>\n          )}\n        </header>\n      </div>\n\n      <Switch>\n        <Route path=\"/sign-up\">\n          <SignUp\n            user={user}\n            setUser={setUser}\n          />\n        </Route>\n        <Route path=\"/sign-in\">\n          <SignIn\n            user={user}\n            setUser={setUser}\n          />\n        </Route>\n        {!user && !usersToken && <Redirect to=\"/sign-in\" />}\n        <Route path=\"/users\">\n          {user && (\n            <UsersList\n              user={user}\n            />\n          )}\n        </Route>\n        <Route path=\"/chats\">\n          <Chats\n            userId={user?.id}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container___8gj8\",\"form\":\"SignUp_form__37NGc\",\"input\":\"SignUp_input__1zju_\",\"button\":\"SignUp_button__f3QJr\",\"error\":\"SignUp_error__2HfVX\",\"link\":\"SignUp_link__1BKSZ\"};"],"sourceRoot":""}